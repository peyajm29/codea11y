import type { CancellationToken } from 'vscode';
import { ChatMessage } from '../openai';
import type { LanguageModelChatMessage } from '../vscodeTypes';
/**
 * Represents a tokenizer that can be used to tokenize text in chat messages.
 */
export interface ITokenizer {
    readonly _serviceBrand: undefined;
    /**
     * Return the length of `text` in number of tokens.
     *
     * @param {str} text - The input text
     * @returns {number}
     */
    tokenLength(text: string, token?: CancellationToken): Promise<number> | number;
    countMessageTokens(message: ChatMessage): Promise<number> | number;
}
export declare class AnyTokenizer implements ITokenizer {
    private countTokens;
    _serviceBrand: undefined;
    constructor(countTokens: (text: string | LanguageModelChatMessage, token?: CancellationToken) => Thenable<number>);
    tokenLength(text: string, token?: CancellationToken): Promise<number>;
    countMessageTokens(message: ChatMessage): Promise<number>;
    private toChatRole;
}
